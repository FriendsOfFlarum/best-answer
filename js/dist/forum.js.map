{"version":3,"sources":["webpack://@fof/best-answer/webpack/bootstrap","webpack://@fof/best-answer/external \"flarum.core.compat['forum/app']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/extend']\"","webpack://@fof/best-answer/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/best-answer/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/best-answer/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/models/Discussion']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/Model']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/components/Link']\"","webpack://@fof/best-answer/external \"flarum.core.compat['tags/models/Tag']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/Notification']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/helpers/username']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/Post']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/PostMeta']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/helpers/userOnline']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/Component']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/best-answer/external \"flarum.core.compat['common/components/Badge']\"","webpack://@fof/best-answer/external \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@fof/best-answer/./src/forum/components/SelectBestAnswerNotification.js","webpack://@fof/best-answer/./src/forum/components/SelectBestAnswerItem.js","webpack://@fof/best-answer/./src/forum/components/AwardedBestAnswerNotification.js","webpack://@fof/best-answer/./src/forum/components/BestAnswerInDiscussionNotification.js","webpack://@fof/best-answer/./src/forum/components/index.js","webpack://@fof/best-answer/./src/forum/index.js","webpack://@fof/best-answer/./src/forum/addBestAnswerAction.js","webpack://@fof/best-answer/./src/forum/addAnsweredBadge.tsx","webpack://@fof/best-answer/./src/forum/addBestAnswerView.js","webpack://@fof/best-answer/./src/forum/extend/extendNotifications.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","SelectBestAnswerNotification","icon","href","discussion","this","attrs","notification","subject","app","route","content","translator","trans","Notification","SelectBestAnswerItem","oninit","vnode","post","view","className","items","toArray","getSetTime","bestAnswerSetAt","humanTime","ItemList","add","data-number","number","user","bestAnswerUser","time_set","a","onclick","set","Component","AwardedBestAnswerNotification","fromUser","BestAnswerInDiscussionNotification","components","initializers","ineligible","blockSelectOwnPost","isThisBestAnswer","actionLabel","saveDiscussion","Discussion","bestAnswerPost","Model","hasOne","hasBestAnswer","attribute","canSelectBestAnswer","transformDate","has","Tag","isQnA","notificationComponents","selectBestAnswer","awardedBestAnswer","bestAnswerInDiscussion","extend","type","label","isHidden","session","forum","id","isBestAnswer","save","bestAnswerPostId","bestAnswerUserId","relationships","data","then","current","matches","DiscussionPage","update","redraw","PostControls","pushAttributes","contentType","Button","component","CommentPost","thisPost","goToNumber","userOnline","username","PostMeta","trust","contentHtml","PostComponent","elementAttrs","NotificationGrid","IndexPage","tag","currentTag","canStartDiscussion","cta","children","replace","options","selected","discussions","bestAnswer","Dropdown","buttonClassName","keys","map","accessibleToggleLabel","active","refresh","DiscussionListState","params","prepend","filter","q","DiscussionComposer","tags","composer","fields","undefined","some","titlePlaceholder","bidi","title","placeholder","disabled","onkeydown"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/extend'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['tags/models/Tag'];","module.exports = flarum.core.compat['forum/components/Notification'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['forum/states/DiscussionListState'];","module.exports = flarum.core.compat['forum/components/DiscussionComposer'];","module.exports = flarum.core.compat['forum/utils/PostControls'];","module.exports = flarum.core.compat['forum/components/Post'];","module.exports = flarum.core.compat['forum/components/PostMeta'];","module.exports = flarum.core.compat['common/helpers/userOnline'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/components/Badge'];","module.exports = flarum.core.compat['forum/components/NotificationGrid'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class SelectBestAnswerNotification extends Notification {\n  icon() {\n    return 'fas fa-comment-dots';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const discussion = notification.subject();\n\n    return app.route.discussion(discussion);\n  }\n\n  content() {\n    return app.translator.trans('fof-best-answer.forum.notification.content');\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport Link from 'flarum/common/components/Link';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nexport default class SelectBestAnswerItem extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    const { post, discussion } = this.attrs;\n\n    this.post = post;\n    this.discussion = discussion;\n  }\n\n  view() {\n    return <li className=\"Post--BestAnswer\">{this.items().toArray()}</li>;\n  }\n\n  getSetTime(discussion) {\n    if (discussion.bestAnswerSetAt() === null) {\n      return;\n    }\n    return humanTime(discussion.bestAnswerSetAt());\n  }\n\n  items() {\n    const items = new ItemList();\n\n    items.add(\n      'post',\n      this.post ? (\n        <span>\n          {icon('fas fa-check')}\n          {app.translator.trans('fof-best-answer.forum.best_answer_button')}\n        </span>\n      ) : (\n        <Link href={app.route.post(this.post)} data-number={this.post.number()}>\n          {icon('fas fa-check')}\n          {app.translator.trans('fof-best-answer.forum.best_answer_button')}\n        </Link>\n      )\n    );\n\n    items.add(\n      'user',\n      <span className=\"BestAnswer--User\">\n        {app.translator.trans('fof-best-answer.forum.best_answer_label', {\n          user: this.discussion.bestAnswerUser(),\n          time_set: this.getSetTime(this.discussion),\n          a: <a onclick={() => m.route.set(app.route.user(this.discussion.bestAnswerUser()))} />,\n        })}\n      </span>\n    );\n\n    return items;\n  }\n}\n","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class AwardedBestAnswerNotification extends Notification {\n  icon() {\n    return 'fas fa-check';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const discussion = notification.subject();\n\n    return app.route.discussion(discussion);\n  }\n\n  content() {\n    const user = this.attrs.notification.fromUser();\n    return app.translator.trans('fof-best-answer.forum.notification.awarded', {\n      user: user,\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class BestAnswerInDiscussionNotification extends Notification {\n  icon() {\n    return 'fas fa-check';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const discussion = notification.subject();\n\n    return app.route.discussion(discussion);\n  }\n\n  content() {\n    const user = this.attrs.notification.fromUser();\n    return app.translator.trans('fof-best-answer.forum.notification.best_answer_in_discussion', {\n      user: user,\n    });\n  }\n}\n","import SelectBestAnswerItem from './SelectBestAnswerItem';\n\nexport const components = {\n  SelectBestAnswerItem,\n};\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Tag from 'flarum/tags/models/Tag';\nimport Model from 'flarum/common/Model';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\n\nimport SelectBestAnswerNotification from './components/SelectBestAnswerNotification';\nimport addBestAnswerAction from './addBestAnswerAction';\nimport addBestAnswerView from './addBestAnswerView';\nimport addAnsweredBadge from './addAnsweredBadge';\nimport AwardedBestAnswerNotification from './components/AwardedBestAnswerNotification';\nimport BestAnswerInDiscussionNotification from './components/BestAnswerInDiscussionNotification';\nimport extendNotifications from './extend/extendNotifications';\n\nexport * from './components';\n\napp.initializers.add('fof/best-answer', () => {\n  Discussion.prototype.bestAnswerPost = Model.hasOne('bestAnswerPost');\n  Discussion.prototype.bestAnswerUser = Model.hasOne('bestAnswerUser');\n  Discussion.prototype.hasBestAnswer = Model.attribute('hasBestAnswer');\n  Discussion.prototype.canSelectBestAnswer = Model.attribute('canSelectBestAnswer');\n  Discussion.prototype.bestAnswerSetAt = Model.attribute('bestAnswerSetAt', Model.transformDate);\n\n  if (app.initializers.has('flarum-tags')) {\n    Tag.prototype.isQnA = Model.attribute('isQnA');\n  }\n\n  app.notificationComponents.selectBestAnswer = SelectBestAnswerNotification;\n  app.notificationComponents.awardedBestAnswer = AwardedBestAnswerNotification;\n  app.notificationComponents.bestAnswerInDiscussion = BestAnswerInDiscussionNotification;\n\n  addAnsweredBadge();\n  addBestAnswerAction();\n  addBestAnswerView();\n\n  extendNotifications();\n\n  extend(IndexPage.prototype, 'sidebarItems', function (items) {\n    const tag = this.currentTag();\n\n    if (!tag?.isQnA?.()) return;\n\n    const canStartDiscussion = app.forum.attribute('canStartDiscussion') || !app.session.user;\n    const cta = items.get('newDiscussion');\n    cta.children = app.translator.trans(\n      canStartDiscussion ? 'fof-best-answer.forum.index.ask_question' : 'fof-best-answer.forum.index.cannot_ask_question'\n    );\n\n    items.replace('startDiscussion', cta);\n  });\n\n  extend(IndexPage.prototype, 'viewItems', function (items) {\n    if (!app.forum.attribute('showBestAnswerFilterUi')) {\n      return;\n    }\n\n    const tag = this.currentTag();\n\n    if (!tag?.isQnA?.()) {\n      if (app.discussions.bestAnswer) {\n        delete app.discussions.bestAnswer;\n        app.discussions.refresh();\n      }\n\n      return;\n    }\n\n    const options = ['all', 'solved', 'unsolved'];\n\n    const selected = app.discussions.bestAnswer;\n\n    items.add(\n      'solved-filter',\n      Dropdown.component(\n        {\n          buttonClassName: 'Button',\n          label: app.translator.trans(\n            `fof-best-answer.forum.filter.${options[selected] || Object.keys(options).map((key) => options[key])[0]}_label`\n          ),\n          accessibleToggleLabel: app.translator.trans('fof-best-answer.forum.filter.accessible_label'),\n        },\n        Object.keys(options).map((value) => {\n          const label = options[value];\n          const active = (selected || Object.keys(options)[0]) === value;\n\n          return Button.component(\n            {\n              icon: active ? 'fas fa-check' : true,\n              active: active,\n              onclick: () => {\n                app.discussions.bestAnswer = value;\n                if (value === '0') {\n                  delete app.discussions.bestAnswer;\n                }\n                app.discussions.refresh();\n              },\n            },\n            app.translator.trans(`fof-best-answer.forum.filter.${label}_label`)\n          );\n        })\n      )\n    );\n  });\n\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\n    if (app.discussions.bestAnswer) {\n      const negate = app.discussions.bestAnswer === '2';\n      const prepend = negate ? '-' : '';\n\n      params.filter[`${prepend}solved-discussions`] = true;\n\n      if (params.filter.q) {\n        params.filter.q += ` ${prepend}is:solved`;\n      }\n    }\n  });\n\n  extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n    const tags = this.composer.fields.tags;\n    if (tags === undefined) return;\n\n    const qna = tags.some((t) => t.isQnA());\n\n    if (!qna) return;\n\n    this.attrs.titlePlaceholder = app.translator.trans('fof-best-answer.forum.composer.titlePlaceholder');\n\n    items.replace(\n      'discussionTitle',\n      <h3>\n        <input\n          className=\"FormControl\"\n          bidi={this.title}\n          placeholder={this.attrs.titlePlaceholder}\n          disabled={!!this.attrs.disabled}\n          onkeydown={this.onkeydown.bind(this)}\n        />\n      </h3>\n    );\n  });\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport CommentPost from 'flarum/forum/components/CommentPost';\n\nexport default () => {\n  const ineligible = (discussion, post) => {\n    return post.isHidden() || post.number() === 1 || !discussion.canSelectBestAnswer() || !app.session.user;\n  };\n\n  const blockSelectOwnPost = (post) => {\n    return !app.forum.attribute('canSelectBestAnswerOwnPost') && post.user() && post.user().id() === app.session.user.id();\n  };\n\n  const isThisBestAnswer = (discussion, post) => {\n    return discussion.bestAnswerPost() && discussion.bestAnswerPost().id() === post.id();\n  };\n\n  const actionLabel = (isBestAnswer) => {\n    return app.translator.trans(isBestAnswer ? 'fof-best-answer.forum.remove_best_answer' : 'fof-best-answer.forum.this_best_answer');\n  };\n\n  const saveDiscussion = (discussion, isBestAnswer, post) => {\n    discussion\n      .save({\n        bestAnswerPostId: isBestAnswer ? post.id() : 0,\n        bestAnswerUserId: app.session.user.id(),\n        relationships: isBestAnswer\n          ? { bestAnswerPost: post, bestAnswerUser: app.session.user }\n          : delete discussion.data.relationships.bestAnswerPost,\n      })\n      .then(() => {\n        if (app.current.matches(DiscussionPage)) {\n          app.current.get('stream').update();\n        }\n\n        m.redraw();\n\n        if (isBestAnswer) {\n          m.route.set(app.route.discussion(discussion));\n        }\n      });\n  };\n\n  extend(PostControls, 'moderationControls', function (items, post) {\n    if (app.forum.attribute('useAlternativeBestAnswerUi')) return;\n\n    const discussion = post.discussion();\n    let isBestAnswer = isThisBestAnswer(discussion, post);\n\n    post.pushAttributes({ isBestAnswer });\n\n    if (post.contentType() !== 'comment') return;\n\n    if (ineligible(discussion, post) || blockSelectOwnPost(post) || !app.current.matches(DiscussionPage)) return;\n\n    items.add(\n      'bestAnswer',\n      Button.component(\n        {\n          icon: `fa${isBestAnswer ? 's' : 'r'} fa-comment-dots`,\n          onclick: () => {\n            isBestAnswer = !isBestAnswer;\n\n            saveDiscussion(discussion, isBestAnswer, post);\n          },\n        },\n        actionLabel(isBestAnswer)\n      )\n    );\n  });\n\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n    if (!app.forum.attribute('useAlternativeBestAnswerUi')) return;\n\n    const post = this.attrs.post;\n    const discussion = this.attrs.post.discussion();\n    let isBestAnswer = isThisBestAnswer(discussion, post);\n    let hasBestAnswer = discussion.bestAnswerPost() !== false;\n\n    post.pushAttributes({ isBestAnswer });\n\n    if (ineligible(discussion, post) || blockSelectOwnPost(post) || !app.current.matches(DiscussionPage)) return;\n\n    items.add(\n      'bestAnswer',\n      Button.component(\n        {\n          className: !hasBestAnswer ? 'Button Button--primary' : isBestAnswer ? 'Button Button--primary' : 'Button Button--link',\n          onclick: function onclick() {\n            hasBestAnswer = !hasBestAnswer;\n            isBestAnswer = !isBestAnswer;\n\n            saveDiscussion(discussion, isBestAnswer, post);\n          },\n        },\n        actionLabel(isBestAnswer)\n      )\n    );\n  });\n};\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Badge from 'flarum/common/components/Badge';\nimport Discussion from 'flarum/common/models/Discussion';\nimport ItemList from 'flarum/common/utils/ItemList';\n\nexport default function () {\n  extend(Discussion.prototype, 'badges', function (items: ItemList) {\n    if (this.hasBestAnswer() && !items.has('hidden')) {\n      items.add('bestAnswer', <Badge type=\"bestAnswer\" icon=\"fas fa-check\" label={app.translator.trans('fof-best-answer.forum.answered_badge')} />);\n    }\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport PostComponent from 'flarum/forum/components/Post';\nimport PostMeta from 'flarum/forum/components/PostMeta';\nimport username from 'flarum/common/helpers/username';\nimport userOnline from 'flarum/common/helpers/userOnline';\nimport Link from 'flarum/common/components/Link';\n\nimport SelectBestAnswerItem from './components/SelectBestAnswerItem';\n\nexport default () => {\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const post = this.attrs.post;\n\n    if (post.discussion().bestAnswerPost() && post.discussion().bestAnswerPost().id() === post.id() && !post.isHidden()) {\n      items.add(\n        'isBestAnswer',\n        SelectBestAnswerItem.component({\n          post,\n          discussion: post.discussion(),\n        })\n      );\n    }\n  });\n\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const thisPost = this.attrs.post;\n    const discussion = thisPost.discussion();\n    const post = discussion.bestAnswerPost();\n\n    if (post && !post.isHidden() && thisPost.number() === 1 && !thisPost.isHidden()) {\n      const user = post.user();\n\n      items.add(\n        'bestAnswerPost',\n        <div className=\"CommentPost\" onclick={() => app.current.get('stream').goToNumber(post.number())}>\n          <div className=\"Post-header\">\n            <ul>\n              <li className=\"item-user\">\n                <div className=\"PostUser\">\n                  {user && userOnline(user)}\n                  <h3>{user ? <Link href={app.route.user(user)}>{username(user)}</Link> : username(user)}</h3>\n                </div>\n              </li>\n              {post.discussion() && <li className=\"item-meta\">{PostMeta.component({ post })}</li>}\n              {SelectBestAnswerItem.component({\n                post,\n                discussion,\n              })}\n            </ul>\n          </div>\n          <div className=\"Post-body\">{m.trust(post.contentHtml())}</div>\n        </div>,\n        -10\n      );\n    }\n  });\n\n  extend(PostComponent.prototype, 'elementAttrs', function (elementAttrs) {\n    const post = this.attrs.post;\n    if (post.discussion().bestAnswerPost() && post.discussion().bestAnswerPost().id() === post.id() && !post.isHidden()) {\n      elementAttrs.className ? (elementAttrs.className += ' Post--bestAnswer') : (elementAttrs.className = 'Post--bestAnswer');\n    }\n  });\n};\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\n\nexport default function () {\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items: ItemList) {\n    items.add('awardedBestAnswer', {\n      name: 'awardedBestAnswer',\n      icon: 'fas fa-check',\n      label: app.translator.trans('fof-best-answer.forum.notification.preferences.awarded_best_answer'),\n    });\n    items.add('bestAnswerInDiscussion', {\n      name: 'bestAnswerInDiscussion',\n      icon: 'fas fa-check',\n      label: app.translator.trans('fof-best-answer.forum.notification.preferences.best_answer_in_discussion'),\n    });\n    items.add('selectBestAnswer', {\n      name: 'selectBestAnswer',\n      icon: 'fas fa-stopwatch',\n      label: app.translator.trans('fof-best-answer.forum.notification.preferences.select_best_answer'),\n    });\n  });\n}\n"],"sourceRoot":""}